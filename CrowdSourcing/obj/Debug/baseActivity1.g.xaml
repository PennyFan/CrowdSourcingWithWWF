<?xml version="1.0" encoding="utf-8"?>
<local:baseActivity1 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="clr-namespace:CrowdSourcing;assembly=CrowdSourcing" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>CrowdSourcing</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:baseActivity1.Implementation>
    <StateMachine>
      <StateMachine.InitialState>
        <State x:Name="__ReferenceID1" DisplayName="待判断">
          <State.Entry>
            <Sequence>
              <local:GetCurrentWorkflowId>
                <local:GetCurrentWorkflowId.currentWorkflowId>
                  <OutArgument x:TypeArguments="s:Guid">
                    <mca:CSharpReference x:TypeArguments="s:Guid">workflowId</mca:CSharpReference>
                  </OutArgument>
                </local:GetCurrentWorkflowId.currentWorkflowId>
              </local:GetCurrentWorkflowId>
              <WriteLine>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">"当前工作流ID："+workflowId</mca:CSharpValue>
                </InArgument>
              </WriteLine>
              <WriteLine>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">"任务名：" + taskName;</mca:CSharpValue>
                </InArgument>
              </WriteLine>
              <WriteLine>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">"任务描述：" + taskDescription;</mca:CSharpValue>
                </InArgument>
              </WriteLine>
              <WriteLine Text="请输入这个任务是简单任务吗？？（y/n）" />
            </Sequence>
          </State.Entry>
          <State.Exit>
            <WriteLine Text="判断结束" />
          </State.Exit>
          <State.Transitions>
            <Transition DisplayName="T1">
              <Transition.Trigger>
                <Sequence x:Name="__ReferenceID0">
                  <local:JudgeSimpTask>
                    <local:JudgeSimpTask.simpleTask>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">simpleTask</mca:CSharpReference>
                      </OutArgument>
                    </local:JudgeSimpTask.simpleTask>
                  </local:JudgeSimpTask>
                </Sequence>
              </Transition.Trigger>
              <Transition.To>
                <State x:Name="__ReferenceID2" DisplayName="分解中">
                  <State.Entry>
                    <Sequence>
                      <WriteLine Text="开始进入分解阶段" />
                      <WriteLine Text="开启子流程，将任务分发出去" />
                    </Sequence>
                  </State.Entry>
                  <State.Exit>
                    <WriteLine Text="任务分解完成" />
                  </State.Exit>
                  <State.Transitions>
                    <Transition DisplayName="T2">
                      <Transition.Trigger>
                        <Sequence>
                          <WriteLine Text="触发器等待任务分解完成" />
                        </Sequence>
                      </Transition.Trigger>
                      <Transition.To>
                        <State x:Name="__ReferenceID3" DisplayName="分解投票中">
                          <State.Entry>
                            <WriteLine Text="开始对分解任务进行投票" />
                          </State.Entry>
                          <State.Exit>
                            <WriteLine Text="分解投票结束" />
                          </State.Exit>
                          <State.Transitions>
                            <Transition DisplayName="T3">
                              <Transition.Trigger>
                                <Sequence>
                                  <WriteLine Text="等待分解投票结果" />
                                  <Delay Duration="00:00:10" />
                                </Sequence>
                              </Transition.Trigger>
                              <Transition.To>
                                <State x:Name="__ReferenceID4" DisplayName="分解完成">
                                  <State.Entry>
                                    <WriteLine Text="开始进入分解完成状态" />
                                  </State.Entry>
                                  <State.Exit>
                                    <WriteLine Text="分解完成状态结束" />
                                  </State.Exit>
                                  <State.Transitions>
                                    <Transition DisplayName="T4">
                                      <Transition.To>
                                        <State x:Name="__ReferenceID5" DisplayName="解决中">
                                          <State.Entry>
                                            <WriteLine Text="开始进入问题解决阶段" />
                                          </State.Entry>
                                          <State.Exit>
                                            <WriteLine Text="问题解决完毕" />
                                          </State.Exit>
                                          <State.Transitions>
                                            <Transition DisplayName="T5">
                                              <Transition.Trigger>
                                                <Sequence>
                                                  <WriteLine Text="等待问题解决" />
                                                  <Delay Duration="00:00:10" />
                                                </Sequence>
                                              </Transition.Trigger>
                                              <Transition.To>
                                                <State x:Name="__ReferenceID6" DisplayName="解决投票中">
                                                  <State.Entry>
                                                    <WriteLine Text="开始问题解决投票" />
                                                  </State.Entry>
                                                  <State.Exit>
                                                    <WriteLine Text="问题解决投票完成" />
                                                  </State.Exit>
                                                  <State.Transitions>
                                                    <Transition DisplayName="T6">
                                                      <Transition.Trigger>
                                                        <Sequence>
                                                          <WriteLine Text="等待问题解决投票中" />
                                                          <Delay Duration="00:00:10" />
                                                        </Sequence>
                                                      </Transition.Trigger>
                                                      <Transition.To>
                                                        <State x:Name="__ReferenceID7" DisplayName="解决完成">
                                                          <State.Entry>
                                                            <WriteLine Text="解决完成" />
                                                          </State.Entry>
                                                          <State.Transitions>
                                                            <Transition DisplayName="T7">
                                                              <Transition.To>
                                                                <State x:Name="__ReferenceID8" DisplayName="合并中">
                                                                  <State.Entry>
                                                                    <WriteLine Text="开始进行问题合并" />
                                                                  </State.Entry>
                                                                  <State.Exit>
                                                                    <WriteLine Text="问题合并结束" />
                                                                  </State.Exit>
                                                                  <State.Transitions>
                                                                    <Transition DisplayName="T8">
                                                                      <Transition.Trigger>
                                                                        <Sequence>
                                                                          <WriteLine Text="等待问题合并" />
                                                                          <Delay Duration="00:00:10" />
                                                                        </Sequence>
                                                                      </Transition.Trigger>
                                                                      <Transition.To>
                                                                        <State x:Name="__ReferenceID9" DisplayName="合并完成">
                                                                          <State.Entry>
                                                                            <WriteLine Text="合并完成" />
                                                                          </State.Entry>
                                                                          <State.Transitions>
                                                                            <Transition DisplayName="T9">
                                                                              <Transition.To>
                                                                                <State x:Name="__ReferenceID10" DisplayName="FinalState" IsFinal="True">
                                                                                  <State.Entry>
                                                                                    <WriteLine Text="问题结束，输出答案" />
                                                                                  </State.Entry>
                                                                                </State>
                                                                              </Transition.To>
                                                                            </Transition>
                                                                          </State.Transitions>
                                                                        </State>
                                                                      </Transition.To>
                                                                    </Transition>
                                                                  </State.Transitions>
                                                                </State>
                                                              </Transition.To>
                                                            </Transition>
                                                          </State.Transitions>
                                                        </State>
                                                      </Transition.To>
                                                    </Transition>
                                                  </State.Transitions>
                                                </State>
                                              </Transition.To>
                                            </Transition>
                                          </State.Transitions>
                                        </State>
                                      </Transition.To>
                                    </Transition>
                                  </State.Transitions>
                                </State>
                              </Transition.To>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
              <Transition.Action>
                <WriteLine Text="这是一个复杂任务" />
              </Transition.Action>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">simpleTask.Equals("n")</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
            <Transition Trigger="{x:Reference __ReferenceID0}" DisplayName="T10">
              <Transition.To>
                <State x:Name="__ReferenceID11" DisplayName="解决中">
                  <State.Entry>
                    <WriteLine Text="开始解决问题" />
                  </State.Entry>
                  <State.Exit>
                    <WriteLine Text="问题解决完成" />
                  </State.Exit>
                  <State.Transitions>
                    <Transition DisplayName="T11">
                      <Transition.Trigger>
                        <Sequence>
                          <WriteLine Text="等待问题解决" />
                          <Delay Duration="00:00:10" />
                        </Sequence>
                      </Transition.Trigger>
                      <Transition.To>
                        <State x:Name="__ReferenceID12" DisplayName="解决投票中">
                          <State.Entry>
                            <WriteLine Text="开始问题解决投票" />
                          </State.Entry>
                          <State.Exit>
                            <WriteLine Text="问题解决投票完成" />
                          </State.Exit>
                          <State.Transitions>
                            <Transition DisplayName="T12">
                              <Transition.Trigger>
                                <Sequence>
                                  <WriteLine Text="等待投票" />
                                  <Delay Duration="00:00:10" />
                                </Sequence>
                              </Transition.Trigger>
                              <Transition.To>
                                <State x:Name="__ReferenceID13" DisplayName="解决完成">
                                  <State.Entry>
                                    <WriteLine Text="问题解决完成" />
                                  </State.Entry>
                                  <State.Transitions>
                                    <Transition DisplayName="T13">
                                      <Transition.To>
                                        <State x:Name="__ReferenceID14" DisplayName="FinalState" IsFinal="True">
                                          <State.Entry>
                                            <WriteLine Text="问题已经解决，输出答案&#xA;            " />
                                          </State.Entry>
                                        </State>
                                      </Transition.To>
                                    </Transition>
                                  </State.Transitions>
                                </State>
                              </Transition.To>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
              <Transition.Action>
                <WriteLine Text="这是一个简单任务" />
              </Transition.Action>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">simpleTask.Equals("y")</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
          </State.Transitions>
        </State>
      </StateMachine.InitialState>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
      <x:Reference>__ReferenceID13</x:Reference>
      <x:Reference>__ReferenceID14</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:String" Name="simpleTask" />
        <Variable x:TypeArguments="s:Guid" Name="workflowId" />
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol>9xDQm++S+tHZleDnAIs8xsZKVkU6XGx1Y2FzXE15RG9jdW1lbnRcVlMyMDEzXENyb3dkU291cmNpbmdTb2x1dGlvblxDcm93ZFNvdXJjaW5nXHhhbWxcYmFzZUFjdGl2aXR5MS54YW1scy8DzQISAgEBMQe4Ag8CAW5eD+wBFwIBYnAX6AEfAgFXgAEf5AEnAgFQigEn4AEvAgFFmgEv3AE3AgE6qgE32AE/AgE1sQE/1AFHAgEqwQFH0AFPAgElyAFPzAFXAgEh9wEPrgIXAgEWhwIXqgIfAgELlwIfpgInAgEGngInogIvAgECMwtLFgMBhwFOC05TAwGFAVMPWxoCAX7yAQ/yAWQCAXnvAQ/vAVsCAXe0Ag+0AmQCAXKxAg+xAlsCAXBgE2MeAgFpZhNmXAIBZ2sXbSICAWRyG3JpAgFgdRt1ZAIBXnoffSoCAVmCASOCAXACAVWFASOFAW8CAVOMASuMAXkCAU6PASuPAXUCAUyUAS+XAToCAUecATOcAX8CAUOfATOfAX8CAUGkATenAUICATysATusAYMBAgE4swFDswGPAQIBM7YBQ7YBjQECATG7AUe+AVICASzDAUvDAZMBAgEoygFTygGgAQIBI/kBE/kBXQIBH/wBE/wBXQIBHYECF4QCIgIBGIkCG4kCZwIBFIwCG4wCZwIBEpECH5QCKgIBDZkCI5kCbQIBCaACK6ACiwECAQQ0DToqAwGcATsNPxkDAZYBQA1EGQMBkAFFDUkZAwGKAUoNSmUDAYgBTkpOUAMBhgFUEVonAgF/7wFO7wFYAgF4sQJOsQJYAgFxYRVhYAIBbGIVYmUCAWpmUWZZAgFobBlsZwIBZXJZcmYCAWF1WXVhAgFfeyF7bAIBXHwhfGgCAVqCAWGCAW0CAVaFAWKFAWwCAVSMAWqMAXYCAU+PAWqPAXICAU2VATGVAXsCAUqWATGWAXgCAUicAXKcAXwCAUSfAXKfAXwCAUKlATmlAYYBAgE/pgE5pgGAAQIBPawBeqwBgAECATmzAYIBswGMAQIBNLYBggG2AYoBAgEyvAFJvAGTAQIBL70BSb0BkAECAS3DAYoBwwGQAQIBKcoBkgHKAZ0BAgEk+QFS+QFaAgEg/AFS/AFaAgEeggIZggJjAgEbgwIZgwJgAgEZiQJaiQJkAgEVjAJajAJkAgETkgIhkgJpAgEQkwIhkwJoAgEOmQJimQJqAgEKoAJqoAKIAQIBBTcTN2EDAZ0BPRE9ZAMBlwFCEUJhAwGRAUcRR2kDAYsBSkxKYgMBiQFXF1dnAwGAAWFTYV0CAW1iU2JiAgFrbFdsZAIBZntfe2kCAV18MXw7AgFblQFwlQF4AgFLlgFBlgFLAgFJpQF4pQGDAQIBQKYBSaYBUwIBPrwBiAG8AZABAgEwvQFZvQFjAgEuggJYggJgAgEcgwIpgwIzAgEakgJgkgJmAgERkwIxkwI7AgEP</sads:DebugSymbol.Symbol>
    </StateMachine>
  </local:baseActivity1.Implementation>
</local:baseActivity1>