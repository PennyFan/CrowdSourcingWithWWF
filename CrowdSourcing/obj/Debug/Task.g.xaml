<?xml version="1.0" encoding="utf-8"?>
<cx:Task xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cx="clr-namespace:CrowdSourcing.xaml;assembly=CrowdSourcing" xmlns:local="clr-namespace:CrowdSourcing;assembly=CrowdSourcing" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>CrowdSourcing</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>CrowdSourcing</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <cx:Task.Implementation>
    <StateMachine>
      <StateMachine.InitialState>
        <State x:Name="__ReferenceID3" DisplayName="任务类型判定">
          <State.Transitions>
            <Transition DisplayName="主任务">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">task.taskType.Equals(ConstantDefine.mainTask)</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID4" DisplayName="任务复杂度判定">
                  <State.Transitions>
                    <Transition DisplayName="复杂任务">
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">simpleTask=="no"</mca:CSharpValue>
                      </Transition.Condition>
                      <Transition.To>
                        <State x:Name="__ReferenceID5" DisplayName="分解中">
                          <State.Transitions>
                            <Transition DisplayName="分解完成">
                              <Transition.To>
                                <State x:Name="__ReferenceID1" DisplayName="解决中">
                                  <State.Transitions>
                                    <Transition DisplayName="解决完成">
                                      <Transition.To>
                                        <State x:Name="__ReferenceID6" DisplayName="解决投票中">
                                          <State.Transitions>
                                            <Transition DisplayName="投票完成">
                                              <Transition.To>
                                                <State x:Name="__ReferenceID7" DisplayName="合并中">
                                                  <State.Transitions>
                                                    <Transition DisplayName="合并完成">
                                                      <Transition.To>
                                                        <State x:Name="__ReferenceID8" DisplayName="发布者审批">
                                                          <State.Transitions>
                                                            <Transition DisplayName="确认">
                                                              <Transition.Condition>
                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">agree=="yes"</mca:CSharpValue>
                                                              </Transition.Condition>
                                                              <Transition.To>
                                                                <State x:Name="__ReferenceID9" DisplayName="工资结算">
                                                                  <State.Transitions>
                                                                    <Transition DisplayName="结算完成">
                                                                      <Transition.To>
                                                                        <State x:Name="__ReferenceID0" DisplayName="FinalState" IsFinal="True" />
                                                                      </Transition.To>
                                                                    </Transition>
                                                                  </State.Transitions>
                                                                </State>
                                                              </Transition.To>
                                                            </Transition>
                                                            <Transition DisplayName="拒绝" To="{x:Reference __ReferenceID0}">
                                                              <Transition.Condition>
                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">agree == "no"</mca:CSharpValue>
                                                              </Transition.Condition>
                                                            </Transition>
                                                          </State.Transitions>
                                                          <State.Variables>
                                                            <Variable x:TypeArguments="x:String" Name="agree" />
                                                          </State.Variables>
                                                        </State>
                                                      </Transition.To>
                                                    </Transition>
                                                  </State.Transitions>
                                                </State>
                                              </Transition.To>
                                            </Transition>
                                          </State.Transitions>
                                        </State>
                                      </Transition.To>
                                    </Transition>
                                  </State.Transitions>
                                </State>
                              </Transition.To>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                    </Transition>
                    <Transition DisplayName="简单任务" To="{x:Reference __ReferenceID1}">
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">simpleTask == "yes"</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
            <Transition DisplayName="分解投票任务">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">task.taskType.Equals(ConstantDefine.decomposeVotingTask)</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID12" DisplayName="分解投票中">
                  <State.Transitions>
                    <Transition DisplayName="投票完成">
                      <Transition.To>
                        <State x:Name="__ReferenceID13" DisplayName="FinalState" IsFinal="True" />
                      </Transition.To>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
            <Transition DisplayName="分解任务">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">task.taskType.Equals(ConstantDefine.decomposeTask)</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID10" DisplayName="子任务复杂度判定">
                  <State.Transitions>
                    <Transition DisplayName="复杂任务">
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">subsimpleTask.Equals("no")</mca:CSharpValue>
                      </Transition.Condition>
                      <Transition.To>
                        <State x:Name="__ReferenceID11" DisplayName="子任务分解中">
                          <State.Transitions>
                            <Transition DisplayName="分解完成">
                              <Transition.To>
                                <State x:Name="__ReferenceID2" DisplayName="FinalState" IsFinal="True" />
                              </Transition.To>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                    </Transition>
                    <Transition DisplayName="简单任务" To="{x:Reference __ReferenceID2}">
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">subsimpleTask.Equals("yes")</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                  </State.Transitions>
                  <State.Variables>
                    <Variable x:TypeArguments="x:String" Name="subsimpleTask" />
                  </State.Variables>
                </State>
              </Transition.To>
            </Transition>
            <Transition DisplayName="解决任务">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">task.taskType.Equals(ConstantDefine.solvingTask)</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID14" DisplayName="小任务解决中">
                  <State.Transitions>
                    <Transition DisplayName="解决完成">
                      <Transition.To>
                        <State x:Name="__ReferenceID15" DisplayName="FinalState" IsFinal="True" />
                      </Transition.To>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
            <Transition DisplayName="解决投票任务">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">task.taskType.Equals(ConstantDefine.solvingVotingTask)</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID16" DisplayName="解决投票中">
                  <State.Transitions>
                    <Transition DisplayName="投票完成">
                      <Transition.To>
                        <State x:Name="__ReferenceID17" DisplayName="FinalState" IsFinal="True" />
                      </Transition.To>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
          </State.Transitions>
          <State.Variables>
            <Variable x:TypeArguments="x:String" Name="variable1" />
          </State.Variables>
        </State>
      </StateMachine.InitialState>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
      <x:Reference>__ReferenceID13</x:Reference>
      <x:Reference>__ReferenceID14</x:Reference>
      <x:Reference>__ReferenceID15</x:Reference>
      <x:Reference>__ReferenceID16</x:Reference>
      <x:Reference>__ReferenceID17</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:String" Name="simpleTask" />
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol>9xCPsul7hTsPLG+GFmyDKCeFTUU6XGx1Y2FzXE15RG9jdW1lbnRcVlMyMDEzXENyb3dkU291cmNpbmdTb2x1dGlvblxDcm93ZFNvdXJjaW5nXHhhbWxcVGFzay54YW1sHi0D8wESAgEBLwfbAQ8CAUY2D4EBFwIBPT0XeB8CATpBH3QnAgE3RSdwLwIBNEkvbDcCATFNN2g/AgEmVD9cRwIBI1hHWLoBAgEhmQEPtAEXAgEWoAEXqAEfAgETpAEfpAGTAQIBEYkBD5EBFwIBDo0BF40BjAECAQy8AQ/EARcCAQnAARfAAYwBAgEHzAEP1AEXAgEE0AEX0AGMAQIBAjMPM3sCAViGAQ+GAYYBAgFUlgEPlgGAAQIBULkBD7kBfgIBTMkBD8kBhAECAUg6FzpmAgFCfRd9aQIBP1E/UYoBAgEsYT9hiwECASidARedAXACARytARetAXECARg=</sads:DebugSymbol.Symbol>
    </StateMachine>
  </cx:Task.Implementation>
</cx:Task>