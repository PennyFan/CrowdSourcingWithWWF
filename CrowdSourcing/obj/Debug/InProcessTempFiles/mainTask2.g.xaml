<?xml version="1.0" encoding="utf-8"?>
<cx:mainTask2 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cx="clr-namespace:CrowdSourcing.xaml;assembly=CrowdSourcing" xmlns:local="clr-namespace:CrowdSourcing;assembly=CrowdSourcing" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>CrowdSourcing</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>CrowdSourcing</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <cx:mainTask2.Implementation>
    <StateMachine>
      <StateMachine.InitialState>
        <State x:Name="__ReferenceID2" DisplayName="待判断">
          <State.Transitions>
            <Transition DisplayName="T1">
              <Transition.Trigger>
                <Sequence x:Name="__ReferenceID0">
                  <local:SetBookmark>
                    <local:SetBookmark.bookmarkName>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">BookmarkName.WaitJudgement</mca:CSharpValue>
                      </InArgument>
                    </local:SetBookmark.bookmarkName>
                    <local:SetBookmark.returnObjectValue>
                      <OutArgument x:TypeArguments="x:Object">
                        <mca:CSharpReference x:TypeArguments="x:Object">simpleTask</mca:CSharpReference>
                      </OutArgument>
                    </local:SetBookmark.returnObjectValue>
                  </local:SetBookmark>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">simple</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">simpleTask as string</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Transition.Trigger>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">simple.Equals("no")</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID3" DisplayName="分解中">
                  <State.Entry>
                    <While>
                      <While.Variables>
                        <Variable x:TypeArguments="x:Int32" Name="i" />
                      </While.Variables>
                      <While.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">i&lt;ConstantDefine.divideNumber</mca:CSharpValue>
                      </While.Condition>
                      <InvokeMethod MethodName="{x:Null}">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="local:StartSubProcess">
                            <mca:CSharpValue x:TypeArguments="local:StartSubProcess">new StartSubProcess()</mca:CSharpValue>
                          </InArgument>
                        </InvokeMethod.TargetObject>
                      </InvokeMethod>
                    </While>
                  </State.Entry>
                  <State.Transitions>
                    <Transition DisplayName="T2">
                      <Transition.To>
                        <State x:Name="__ReferenceID1" DisplayName="解决中">
                          <State.Transitions>
                            <Transition DisplayName="T3">
                              <Transition.To>
                                <State x:Name="__ReferenceID4" DisplayName="解决投票">
                                  <State.Transitions>
                                    <Transition DisplayName="T4">
                                      <Transition.To>
                                        <State x:Name="__ReferenceID5" DisplayName="合并中">
                                          <State.Transitions>
                                            <Transition DisplayName="T6">
                                              <Transition.To>
                                                <State x:Name="__ReferenceID6" DisplayName="FinalState" IsFinal="True" />
                                              </Transition.To>
                                            </Transition>
                                          </State.Transitions>
                                        </State>
                                      </Transition.To>
                                    </Transition>
                                  </State.Transitions>
                                </State>
                              </Transition.To>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
            <Transition Trigger="{x:Reference __ReferenceID0}" DisplayName="T5" To="{x:Reference __ReferenceID1}">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">simple.Equals("yes")</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
          </State.Transitions>
          <State.Variables>
            <Variable x:TypeArguments="x:String" Name="simple" />
          </State.Variables>
        </State>
      </StateMachine.InitialState>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:Object" Name="simpleTask" />
        <Variable x:TypeArguments="x:Object" Name="ok" />
        <Variable x:TypeArguments="s:Guid" Name="currentWorkflowId" />
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol>d1JFOlxsdWNhc1xNeURvY3VtZW50XFZTMjAxM1xDcm93ZFNvdXJjaW5nU29sdXRpb25cQ3Jvd2RTb3VyY2luZ1x4YW1sXG1haW5UYXNrMi54YW1sFC4DnwESAgEBMAeRAQ8CAR5TD4UBFwIBDWkXgQEfAgEKbR99JwIBB3EneS8CAQR1L3WiAQIBAjQPTRoCASxQD1BhAgEmigEPigFiAgEgVRNkGwIBEDURQCUCATpBEUwaAgEtXBVjJAIBF1oXWnYCARE4FzhvAgFBPRc9ZwIBO0kXSWkCATREF0RjAgEuXxtfewIBGA==</sads:DebugSymbol.Symbol>
    </StateMachine>
  </cx:mainTask2.Implementation>
</cx:mainTask2>