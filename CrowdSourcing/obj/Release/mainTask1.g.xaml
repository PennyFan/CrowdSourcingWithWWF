<?xml version="1.0" encoding="utf-8"?>
<local:mainTask1 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="clr-namespace:CrowdSourcing;assembly=CrowdSourcing" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>CrowdSourcing</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>CrowdSourcing</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:mainTask1.Implementation>
    <StateMachine>
      <StateMachine.InitialState>
        <State x:Name="__ReferenceID4" DisplayName="待判断">
          <State.Entry>
            <Sequence>
              <local:GetCurrentWorkflowId>
                <local:GetCurrentWorkflowId.currentWorkflowId>
                  <OutArgument x:TypeArguments="s:Guid">
                    <mca:CSharpReference x:TypeArguments="s:Guid">currentWorkflowId</mca:CSharpReference>
                  </OutArgument>
                </local:GetCurrentWorkflowId.currentWorkflowId>
              </local:GetCurrentWorkflowId>
            </Sequence>
          </State.Entry>
          <State.Transitions>
            <Transition DisplayName="复杂任务">
              <Transition.Trigger>
                <Sequence x:Name="__ReferenceID2">
                  <local:SetBookmark>
                    <local:SetBookmark.bookmarkName>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">BookmarkName.WaitJudgement</mca:CSharpValue>
                      </InArgument>
                    </local:SetBookmark.bookmarkName>
                    <local:SetBookmark.returnObjectValue>
                      <OutArgument x:TypeArguments="x:Object">
                        <mca:CSharpReference x:TypeArguments="x:Object">simpleTask</mca:CSharpReference>
                      </OutArgument>
                    </local:SetBookmark.returnObjectValue>
                  </local:SetBookmark>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">simple</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">simpleTask as string</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Transition.Trigger>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">simple.Equals("no")</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID5" DisplayName="分解中">
                  <State.Entry>
                    <While>
                      <While.Variables>
                        <Variable x:TypeArguments="x:Int32" Default="0" Name="i" />
                      </While.Variables>
                      <While.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">i&lt;ConstantDefine.divideNumber</mca:CSharpValue>
                      </While.Condition>
                      <Sequence>
                        <InvokeMethod MethodName="startSubDivideProcess">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="local:StartSubProcess">
                              <mca:CSharpValue x:TypeArguments="local:StartSubProcess">new StartSubProcess()</mca:CSharpValue>
                            </InArgument>
                          </InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="s:Guid">
                            <mca:CSharpValue x:TypeArguments="s:Guid">currentWorkflowId</mca:CSharpValue>
                          </InArgument>
                          <InArgument x:TypeArguments="local:CrowdTask">
                            <mca:CSharpValue x:TypeArguments="local:CrowdTask">task</mca:CSharpValue>
                          </InArgument>
                        </InvokeMethod>
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">
                              <mca:CSharpReference x:TypeArguments="x:Int32">i</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">
                              <mca:CSharpValue x:TypeArguments="x:Int32">i+1</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </While>
                  </State.Entry>
                  <State.Transitions>
                    <Transition DisplayName="分解完成">
                      <Transition.Trigger>
                        <local:SetBookmark>
                          <local:SetBookmark.bookmarkName>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">BookmarkName.Decomposing</mca:CSharpValue>
                            </InArgument>
                          </local:SetBookmark.bookmarkName>
                          <local:SetBookmark.returnObjectValue>
                            <OutArgument x:TypeArguments="x:Object">
                              <mca:CSharpReference x:TypeArguments="x:Object">ok</mca:CSharpReference>
                            </OutArgument>
                          </local:SetBookmark.returnObjectValue>
                        </local:SetBookmark>
                      </Transition.Trigger>
                      <Transition.To>
                        <State x:Name="__ReferenceID3" DisplayName="解决中">
                          <State.Transitions>
                            <Transition DisplayName="解决完成">
                              <Transition.Trigger>
                                <local:SetBookmark>
                                  <local:SetBookmark.bookmarkName>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String">BookmarkName.Solving</mca:CSharpValue>
                                    </InArgument>
                                  </local:SetBookmark.bookmarkName>
                                  <local:SetBookmark.returnObjectValue>
                                    <OutArgument x:TypeArguments="x:Object">
                                      <mca:CSharpReference x:TypeArguments="x:Object">oo</mca:CSharpReference>
                                    </OutArgument>
                                  </local:SetBookmark.returnObjectValue>
                                </local:SetBookmark>
                              </Transition.Trigger>
                              <Transition.To>
                                <State x:Name="__ReferenceID6" DisplayName="解决投票中">
                                  <State.Transitions>
                                    <Transition DisplayName="投票完成">
                                      <Transition.Trigger>
                                        <local:SetBookmark>
                                          <local:SetBookmark.bookmarkName>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">BookmarkName.SolveVoting</mca:CSharpValue>
                                            </InArgument>
                                          </local:SetBookmark.bookmarkName>
                                          <local:SetBookmark.returnObjectValue>
                                            <OutArgument x:TypeArguments="x:Object">
                                              <mca:CSharpReference x:TypeArguments="x:Object">returnValue</mca:CSharpReference>
                                            </OutArgument>
                                          </local:SetBookmark.returnObjectValue>
                                        </local:SetBookmark>
                                      </Transition.Trigger>
                                      <Transition.To>
                                        <State x:Name="__ReferenceID7" DisplayName="合并中">
                                          <State.Transitions>
                                            <Transition DisplayName="合并完成">
                                              <Transition.Trigger>
                                                <local:SetBookmark returnObjectValue="{x:Null}">
                                                  <local:SetBookmark.bookmarkName>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">BookmarkName.Merging</mca:CSharpValue>
                                                    </InArgument>
                                                  </local:SetBookmark.bookmarkName>
                                                </local:SetBookmark>
                                              </Transition.Trigger>
                                              <Transition.To>
                                                <State x:Name="__ReferenceID8" DisplayName="发布者审批中">
                                                  <State.Transitions>
                                                    <Transition DisplayName="同意">
                                                      <Transition.Trigger>
                                                        <Assign x:Name="__ReferenceID0">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Object">
                                                              <mca:CSharpReference x:TypeArguments="x:Object">agree</mca:CSharpReference>
                                                            </OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Object">
                                                              <mca:CSharpValue x:TypeArguments="x:Object">agree as string</mca:CSharpValue>
                                                            </InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Transition.Trigger>
                                                      <Transition.Condition>
                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">agree.Equals("yes")</mca:CSharpValue>
                                                      </Transition.Condition>
                                                      <Transition.To>
                                                        <State x:Name="__ReferenceID9" DisplayName="工资结算中">
                                                          <State.Transitions>
                                                            <Transition DisplayName="结算完成">
                                                              <Transition.To>
                                                                <State x:Name="__ReferenceID1" DisplayName="结束" IsFinal="True" />
                                                              </Transition.To>
                                                            </Transition>
                                                          </State.Transitions>
                                                        </State>
                                                      </Transition.To>
                                                    </Transition>
                                                    <Transition Trigger="{x:Reference __ReferenceID0}" DisplayName="拒绝" To="{x:Reference __ReferenceID1}">
                                                      <Transition.Condition>
                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">agree.Equals("no")</mca:CSharpValue>
                                                      </Transition.Condition>
                                                    </Transition>
                                                  </State.Transitions>
                                                  <State.Variables>
                                                    <Variable x:TypeArguments="x:Object" Name="agree" />
                                                  </State.Variables>
                                                </State>
                                              </Transition.To>
                                            </Transition>
                                          </State.Transitions>
                                        </State>
                                      </Transition.To>
                                    </Transition>
                                  </State.Transitions>
                                  <State.Variables>
                                    <Variable x:TypeArguments="x:Object" Name="returnValue" />
                                  </State.Variables>
                                </State>
                              </Transition.To>
                            </Transition>
                          </State.Transitions>
                          <State.Variables>
                            <Variable x:TypeArguments="x:Object" Name="oo" />
                          </State.Variables>
                        </State>
                      </Transition.To>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
            <Transition Trigger="{x:Reference __ReferenceID2}" DisplayName="简单任务" To="{x:Reference __ReferenceID3}">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">simple.Equals("yes")</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
          </State.Transitions>
          <State.Variables>
            <Variable x:TypeArguments="x:String" Name="simple" />
          </State.Variables>
        </State>
      </StateMachine.InitialState>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:Object" Name="simpleTask" />
        <Variable x:TypeArguments="x:Object" Name="ok" />
        <Variable x:TypeArguments="s:Guid" Name="currentWorkflowId" />
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol>9xA3MAbiKCXAS2yJvM5LbG55UkU6XGx1Y2FzXE15RG9jdW1lbnRcVlMyMDEzXENyb3dkU291cmNpbmdTb2x1dGlvblxDcm93ZFNvdXJjaW5nXHhhbWxcbWFpblRhc2sxLnhhbWwwLgOhAhICAQEwB5ECDwIBfl4PhQIXAgFIlQEXgQIfAgE5pwEf+gEnAgEquQEn8wEvAgEixgEv7wE3AgEH2wE34wE/AgEE3wE/3wGqAQIBAjILOhYDAacBPw9YGgMBjAFbD1thAwGGAYoCD4oCYgMBgAFgE4IBGwIBVYcBF5IBKwIBSpkBH6QBMwIBO6sBJ7YBOwIBLL0BL8MBQwIBJMoBN9UBQAIBFdgBN9gBiQECAQ/oATfoAYgBAgEJMw05KgMBqAFAEUslAwGaAUwRVxoDAY0BYkNiRgIBVmcVgQEgAgFdZRdldgIBV4oBHYoBcwIBUI8BHY8BZQIBS5wBJZwBdwIBQqEBJaEBbQIBPK4BLa4BgwECATOzAS2zAX4CAS3AATXAAYcBAgEl0gE90gGKAQIBHM0BPc0BiAECARY2EzZoAwGpAUMXQ28DAaEBSBdIZwMBmwFUF1RpAwGUAU8XT2MDAY4BaBd0JgIBa3UXgAEgAgFechtyZAIBeG8bb2gCAXJrHWt9AgFsfR19XQIBZXgdeGMCAV8=</sads:DebugSymbol.Symbol>
    </StateMachine>
  </local:mainTask1.Implementation>
</local:mainTask1>